# -*- coding: utf-8 -*-
from __future__ import division, print_function
from ogs5py import OGS

model = OGS(
    task_root='tm1_2Dbeam_root',
    task_id='tm1_2Dbeam',
    output_dir='out',
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_X1',
    GEO_TYPE=['SURFACE', 'SURFACE1'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [0, 0.0],
        [1, 0.0],
        [2, 0.0],
        [3, 0.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_Y1',
    GEO_TYPE=['SURFACE', 'SURFACE2'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [4, 0.0],
        [5, 0.0],
        [6, 0.0],
        [7, 0.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_Y1',
    GEO_TYPE=['SURFACE', 'SURFACE3'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [8, 0.0],
        [9, 0.0],
        [10, 0.0],
        [11, 0.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_Z1',
    GEO_TYPE=['SURFACE', 'SURFACE4'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [12, 0.0],
        [13, 0.0],
        [14, 0.0],
        [15, 0.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='HEAT_TRANSPORT',
    PRIMARY_VARIABLE='TEMPERATURE1',
    GEO_TYPE=['SURFACE', 'SURFACE5'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [16, -10.0],
        [17, -10.0],
        [18, -10.0],
        [19, -10.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='HEAT_TRANSPORT',
    PRIMARY_VARIABLE='TEMPERATURE1',
    GEO_TYPE=['SURFACE', 'SURFACE6'],
    DIS_TYPE=[
        ['LINEAR', 4],
        [20, 10.0],
        [21, 10.0],
        [22, 10.0],
        [23, 10.0],
    ],
    TIM_TYPE=['CURVE', 1],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [0],
        [1],
        [2],
        [3],
        [4],
        [5],
        [6],
        [7],
        [8],
        [9],
        [10],
        [11],
        [12],
        [13],
        [14],
        [15],
        [16],
        [17],
        [18],
        [19],
        [20],
        [21],
        [22],
        [23],
        [24],
        [25],
        [26],
        [27],
        [28],
        [29],
        [30],
        [31],
        [32],
        [33],
        [34],
        [35],
        [36],
        [37],
        [38],
        [39],
        [40],
        [41],
        [42],
        [43],
        [44],
        [45],
        [46],
        [47],
        [48],
        [49],
        [50],
        [51],
        [52],
        [53],
        [54],
        [55],
        [56],
        [57],
        [58],
        [59],
        [60],
        [61],
        [62],
        [63],
        [64],
        [65],
        [66],
        [67],
        [68],
        [69],
        [70],
        [71],
        [72],
        [73],
        [74],
        [75],
        [76],
        [77],
        [78],
        [79],
        [80],
        [81],
        [82],
        [83],
        [84],
        [85],
        [86],
        [87],
        [88],
        [89],
        [90],
        [91],
        [92],
        [93],
        [94],
        [95],
        [96],
        [97],
        [98],
        [99],
        [100],
        [101],
        [102],
        [103],
        [104],
        [105],
        [106],
        [107],
        [108],
        [109],
        [110],
        [111],
        [112],
        [113],
        [114],
        [115],
        [116],
        [117],
        [118],
        [119],
        [120],
        [121],
        [122],
        [123],
        [124],
        [125],
        [126],
        [127],
        [128],
        [129],
        [130],
        [131],
        [132],
        [133],
        [134],
        [135],
        [136],
        [137],
        [138],
        [139],
        [140],
        [141],
        [142],
        [143],
        [144],
        [145],
        [146],
        [147],
        [148],
        [149],
        [150],
        [151],
        [152],
        [153],
        [154],
        [155],
        [156],
        [157],
        [158],
        [159],
    ],
    NODES_INNER=[
        [0],
        [1],
        [2],
        [3],
        [4],
        [5],
        [6],
        [7],
        [8],
        [9],
        [10],
        [11],
        [12],
        [13],
        [14],
        [15],
        [16],
        [17],
        [18],
        [19],
        [20],
        [21],
        [22],
        [23],
        [24],
        [25],
        [26],
        [27],
        [28],
        [29],
        [30],
        [31],
        [32],
        [33],
        [34],
        [35],
        [36],
        [37],
        [38],
        [39],
        [40],
        [41],
        [42],
        [43],
        [44],
        [45],
        [46],
        [47],
        [48],
        [49],
        [50],
        [51],
        [52],
        [53],
        [54],
        [55],
        [56],
        [57],
        [58],
        [59],
        [60],
        [61],
        [62],
        [63],
        [64],
        [65],
        [66],
        [67],
        [68],
        [69],
        [70],
        [71],
        [72],
        [73],
        [74],
        [75],
        [76],
        [77],
        [78],
        [79],
        [80],
        [81],
        [82],
        [83],
        [84],
        [85],
        [86],
        [87],
        [88],
        [89],
        [90],
        [91],
        [92],
        [93],
        [94],
        [95],
        [96],
        [97],
        [98],
        [99],
        [100],
        [101],
        [102],
        [103],
        [104],
        [105],
        [106],
        [107],
        [108],
        [109],
        [110],
        [111],
        [112],
        [113],
        [114],
        [115],
        [116],
        [117],
        [118],
        [119],
        [120],
        [121],
        [122],
        [123],
        [124],
        [125],
        [126],
        [127],
        [128],
        [129],
        [130],
        [131],
        [132],
        [133],
        [134],
        [135],
        [136],
        [137],
        [138],
        [139],
        [140],
        [141],
        [142],
        [143],
        [144],
        [145],
        [146],
        [147],
        [148],
        [149],
        [150],
        [151],
        [152],
        [153],
        [154],
        [155],
        [156],
        [157],
        [158],
        [159],
        [160],
        [161],
        [162],
        [163],
        [164],
        [165],
        [166],
        [167],
        [168],
        [169],
        [170],
        [171],
        [172],
        [173],
        [174],
        [175],
        [176],
        [177],
        [178],
        [179],
        [180],
        [181],
        [182],
        [183],
        [184],
        [185],
        [186],
        [187],
        [188],
        [189],
        [190],
        [191],
        [192],
        [193],
        [194],
        [195],
        [196],
        [197],
        [198],
        [199],
        [200],
        [201],
        [202],
        [203],
        [204],
        [205],
        [206],
        [207],
        [208],
        [209],
        [210],
        [211],
        [212],
        [213],
        [214],
        [215],
        [216],
        [217],
        [218],
        [219],
        [220],
        [221],
        [222],
        [223],
        [224],
        [225],
        [226],
        [227],
        [228],
        [229],
        [230],
        [231],
        [232],
        [233],
        [234],
        [235],
        [236],
        [237],
        [238],
        [239],
        [240],
        [241],
        [242],
        [243],
        [244],
        [245],
        [246],
        [247],
        [248],
        [249],
        [250],
        [251],
        [252],
        [253],
        [254],
        [255],
        [256],
        [257],
        [258],
        [259],
        [260],
        [261],
        [262],
        [263],
        [264],
        [265],
        [266],
        [267],
        [268],
        [269],
        [270],
        [271],
        [272],
        [273],
        [274],
    ],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [160],
        [161],
        [162],
        [163],
        [164],
        [165],
        [166],
        [167],
        [168],
        [169],
        [170],
        [171],
        [172],
        [173],
        [174],
        [175],
        [176],
        [177],
        [178],
        [179],
        [180],
        [181],
        [182],
        [183],
        [184],
        [185],
        [186],
        [187],
        [188],
        [189],
        [190],
        [191],
        [192],
        [193],
        [194],
        [195],
        [196],
        [197],
        [198],
        [199],
        [200],
        [201],
        [202],
        [203],
        [204],
        [205],
        [206],
        [207],
        [208],
        [209],
        [210],
        [211],
        [212],
        [213],
        [214],
        [215],
        [216],
        [217],
        [218],
        [219],
        [220],
        [221],
        [222],
        [223],
        [224],
        [225],
        [226],
        [227],
        [228],
        [229],
        [230],
        [231],
        [232],
        [233],
        [234],
        [235],
        [236],
        [237],
        [238],
        [239],
        [240],
        [241],
        [242],
        [243],
        [244],
        [245],
        [246],
        [247],
        [248],
        [249],
        [250],
        [251],
        [252],
        [253],
        [254],
        [255],
        [256],
        [257],
        [258],
        [259],
        [260],
        [261],
        [262],
        [263],
        [264],
        [265],
        [266],
        [267],
        [268],
        [269],
        [270],
        [271],
        [272],
        [273],
        [274],
        [275],
        [276],
        [277],
        [278],
        [279],
        [280],
        [281],
        [282],
        [283],
        [284],
        [285],
        [286],
        [287],
        [288],
        [289],
        [290],
        [291],
        [292],
        [293],
        [294],
        [295],
        [296],
        [297],
        [298],
        [299],
        [300],
        [301],
        [302],
        [303],
        [304],
        [305],
        [306],
        [307],
        [308],
        [309],
        [310],
        [311],
        [312],
        [313],
        [314],
        [315],
        [316],
        [317],
        [318],
        [319],
    ],
    NODES_INNER=[
        [250],
        [251],
        [252],
        [253],
        [254],
        [255],
        [256],
        [257],
        [258],
        [259],
        [260],
        [261],
        [262],
        [263],
        [264],
        [265],
        [266],
        [267],
        [268],
        [269],
        [270],
        [271],
        [272],
        [273],
        [274],
        [275],
        [276],
        [277],
        [278],
        [279],
        [280],
        [281],
        [282],
        [283],
        [284],
        [285],
        [286],
        [287],
        [288],
        [289],
        [290],
        [291],
        [292],
        [293],
        [294],
        [295],
        [296],
        [297],
        [298],
        [299],
        [300],
        [301],
        [302],
        [303],
        [304],
        [305],
        [306],
        [307],
        [308],
        [309],
        [310],
        [311],
        [312],
        [313],
        [314],
        [315],
        [316],
        [317],
        [318],
        [319],
        [320],
        [321],
        [322],
        [323],
        [324],
        [325],
        [326],
        [327],
        [328],
        [329],
        [330],
        [331],
        [332],
        [333],
        [334],
        [335],
        [336],
        [337],
        [338],
        [339],
        [340],
        [341],
        [342],
        [343],
        [344],
        [345],
        [346],
        [347],
        [348],
        [349],
        [350],
        [351],
        [352],
        [353],
        [354],
        [355],
        [356],
        [357],
        [358],
        [359],
        [360],
        [361],
        [362],
        [363],
        [364],
        [365],
        [366],
        [367],
        [368],
        [369],
        [370],
        [371],
        [372],
        [373],
        [374],
        [375],
        [376],
        [377],
        [378],
        [379],
        [380],
        [381],
        [382],
        [383],
        [384],
        [385],
        [386],
        [387],
        [388],
        [389],
        [390],
        [391],
        [392],
        [393],
        [394],
        [395],
        [396],
        [397],
        [398],
        [399],
        [400],
        [401],
        [402],
        [403],
        [404],
        [405],
        [406],
        [407],
        [408],
        [409],
        [410],
        [411],
        [412],
        [413],
        [414],
        [415],
        [416],
        [417],
        [418],
        [419],
        [420],
        [421],
        [422],
        [423],
        [424],
        [425],
        [426],
        [427],
        [428],
        [429],
        [430],
        [431],
        [432],
        [433],
        [434],
        [435],
        [436],
        [437],
        [438],
        [439],
        [440],
        [441],
        [442],
        [443],
        [444],
        [445],
        [446],
        [447],
        [448],
        [449],
        [450],
        [451],
        [452],
        [453],
        [454],
        [455],
        [456],
        [457],
        [458],
        [459],
        [460],
        [461],
        [462],
        [463],
        [464],
        [465],
        [466],
        [467],
        [468],
        [469],
        [470],
        [471],
        [472],
        [473],
        [474],
        [475],
        [476],
        [477],
        [478],
        [479],
        [480],
        [481],
        [482],
        [483],
        [484],
        [485],
        [486],
        [487],
        [488],
        [489],
        [490],
        [491],
        [492],
        [493],
        [494],
        [495],
        [496],
        [497],
        [498],
        [499],
        [500],
        [501],
        [502],
        [503],
        [504],
        [505],
        [506],
        [507],
        [508],
        [509],
        [510],
        [511],
        [512],
        [513],
        [514],
        [515],
        [516],
        [517],
        [518],
        [519],
        [520],
        [521],
        [522],
        [523],
        [524],
    ],
)
model.gli.read_file('tm1_2Dbeam.gli')
model.ic.add_block(
    main_key='INITIAL_CONDITION',
    PCS_TYPE='HEAT_TRANSPORT',
    PRIMARY_VARIABLE='TEMPERATURE1',
    GEO_TYPE='DOMAIN',
    DIS_TYPE=['CONSTANT', 1e-10],
)
model.mfp.add_block(
    main_key='FLUID_PROPERTIES',
    FLUID_TYPE='LIQUID',
    PCS_TYPE='PRESSURE1',
    DENSITY=[1, 0.0],
    VISCOSITY=[1, 0.001],
)
model.mmp.add_block(
    main_key='MEDIUM_PROPERTIES',
    GEOMETRY_DIMENSION=3,
)
model.msh.read_file('tm1_2Dbeam.msh')
model.msp.add_block(
    main_key='SOLID_PROPERTIES',
    DENSITY=[1, 0.0],
    THERMAL=[
        ['EXPANSION', 0.001],
        ['CAPACITY'],
        [1, 0.0],
        ['CONDUCTIVITY'],
        [1, 1.0],
    ],
    ELASTICITY=[
        ['POISSION', 0.2],
        ['YOUNGS_MODULUS'],
        [1, 10000000000.0],
    ],
)
model.num.add_block(
    main_key='NUMERICS',
    PCS_TYPE='HEAT_TRANSPORT',
    LINEAR_SOLVER=[2, 1, 1e-10, 10000, 1.0, 101, 4],
)
model.num.add_block(
    main_key='NUMERICS',
    PCS_TYPE='DEFORMATION',
    LINEAR_SOLVER=[2, 1, 1e-10, 10000, 1.0, 101, 4],
)
model.out.add_block(
    main_key='OUTPUT',
    NOD_VALUES=[
        ['TEMPERATURE1'],
        ['DISPLACEMENT_X1'],
        ['DISPLACEMENT_Y1'],
        ['DISPLACEMENT_Z1'],
        ['STRESS_XX'],
        ['STRESS_XY'],
        ['STRESS_YY'],
        ['STRESS_ZZ'],
        ['STRESS_XZ'],
        ['STRESS_YZ'],
        ['STRAIN_XX'],
        ['STRAIN_XY'],
        ['STRAIN_YY'],
        ['STRAIN_ZZ'],
        ['STRAIN_XZ'],
        ['STRAIN_YZ'],
    ],
    GEO_TYPE='DOMAIN',
    DAT_TYPE='TECPLOT',
    TIM_TYPE=1,
)
model.pcs.add_block(
    main_key='PROCESS',
    PCS_TYPE='HEAT_TRANSPORT',
    NUM_TYPE='NEW',
)
model.pcs.add_block(
    main_key='PROCESS',
    PCS_TYPE='DEFORMATION',
    NUM_TYPE='NEW',
)
model.rfd.add_block(
    CURVE=[
        [-1, 1],
        [2, 1],
    ],
)
model.tim.add_block(
    main_key='TIME_STEPPING',
    PCS_TYPE='HEAT_TRANSPORT',
    TIME_UNIT='SECOND',
    TIME_STEPS=[2, 1.0],
    TIME_END=1.0,
    TIME_START=0.0,
)
model.tim.add_block(
    main_key='TIME_STEPPING',
    PCS_TYPE='DEFORMATION',
    TIME_UNIT='SECOND',
    TIME_STEPS=[2, 1.0],
    TIME_END=1.0,
    TIME_START=0.0,
)
model.write_input()
model.run_model()
