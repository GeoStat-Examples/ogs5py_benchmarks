# -*- coding: utf-8 -*-
from __future__ import division, print_function
from ogs5py import OGS

model = OGS(
    task_root='m_sdc_root',
    task_id='m_sdc',
    output_dir='out',
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_X1',
    GEO_TYPE=['POLYLINE', 'LD_CORNER'],
    DIS_TYPE=['CONSTANT', 0.0],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_Y1',
    GEO_TYPE=['POLYLINE', 'BOTTOM'],
    DIS_TYPE=['CONSTANT', 0.0],
)
model.bc.add_block(
    main_key='BOUNDARY_CONDITION',
    PCS_TYPE='DEFORMATION',
    PRIMARY_VARIABLE='DISPLACEMENT_Y1',
    GEO_TYPE=['POLYLINE', 'TOP'],
    DIS_TYPE=['CONSTANT', 1.0],
    TIM_TYPE=['CURVE', 1],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [81],
        [83],
        [85],
        [86],
        [87],
        [88],
        [89],
        [90],
        [91],
        [92],
        [93],
        [94],
        [95],
        [96],
        [97],
        [98],
        [99],
        [100],
        [101],
        [102],
        [103],
        [104],
        [105],
        [106],
        [107],
        [108],
        [109],
        [110],
        [111],
        [112],
        [113],
        [114],
        [115],
        [116],
        [117],
        [118],
        [120],
        [121],
        [122],
        [123],
        [124],
        [125],
        [126],
    ],
    NODES_INNER=[
        [76],
        [72],
        [36],
        [77],
        [73],
        [78],
        [74],
        [75],
        [79],
        [19],
        [20],
        [37],
        [80],
        [81],
        [82],
        [83],
        [21],
        [38],
        [84],
        [85],
        [86],
        [87],
        [22],
        [39],
        [88],
        [89],
        [90],
        [91],
        [40],
        [92],
        [93],
        [94],
    ],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [119],
        [127],
        [128],
        [129],
        [130],
        [131],
        [132],
        [133],
        [134],
        [135],
        [136],
        [137],
        [138],
        [139],
        [140],
        [141],
        [142],
        [143],
        [144],
        [145],
        [146],
        [147],
        [148],
        [149],
        [150],
        [151],
        [152],
        [153],
        [154],
        [155],
        [156],
        [157],
        [158],
        [159],
        [160],
        [161],
        [162],
        [163],
        [164],
        [165],
        [166],
        [167],
        [168],
        [169],
    ],
    NODES_INNER=[
        [23],
        [22],
        [91],
        [95],
        [94],
        [24],
        [40],
        [41],
        [92],
        [96],
        [93],
        [97],
        [98],
        [99],
        [25],
        [42],
        [100],
        [101],
        [102],
        [103],
        [26],
        [43],
        [104],
        [105],
        [106],
        [107],
        [27],
        [0],
        [8],
        [9],
        [10],
        [11],
        [1],
    ],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [28],
        [29],
        [36],
        [37],
        [38],
        [39],
        [44],
        [45],
        [46],
        [47],
        [48],
        [49],
        [52],
        [53],
        [54],
        [55],
        [56],
        [57],
        [58],
        [59],
        [60],
        [61],
        [62],
        [63],
        [64],
        [65],
        [66],
        [67],
        [68],
        [69],
        [70],
        [71],
        [72],
        [73],
        [74],
        [75],
        [76],
        [77],
        [78],
        [79],
        [80],
        [82],
        [84],
    ],
    NODES_INNER=[
        [51],
        [55],
        [13],
        [14],
        [54],
        [58],
        [59],
        [15],
        [57],
        [61],
        [62],
        [63],
        [16],
        [60],
        [64],
        [65],
        [66],
        [67],
        [17],
        [33],
        [34],
        [68],
        [69],
        [70],
        [71],
        [18],
        [35],
        [72],
        [73],
        [74],
        [75],
        [19],
        [36],
        [76],
        [77],
    ],
)
model.ddc.add_block(
    main_key='DOMAIN',
    ELEMENTS=[
        [0],
        [1],
        [2],
        [3],
        [4],
        [5],
        [6],
        [7],
        [8],
        [9],
        [10],
        [11],
        [12],
        [13],
        [14],
        [15],
        [16],
        [17],
        [18],
        [19],
        [20],
        [21],
        [22],
        [23],
        [24],
        [25],
        [26],
        [27],
        [30],
        [31],
        [32],
        [33],
        [34],
        [35],
        [40],
        [41],
        [42],
        [43],
        [50],
        [51],
    ],
    NODES_INNER=[
        [3],
        [28],
        [4],
        [44],
        [5],
        [45],
        [6],
        [46],
        [7],
        [47],
        [2],
        [12],
        [29],
        [48],
        [49],
        [50],
        [51],
        [13],
        [30],
        [52],
        [53],
        [54],
        [55],
        [31],
        [56],
        [57],
        [58],
        [32],
        [60],
        [61],
        [33],
        [64],
    ],
)
model.gli.read_file('m_sdc.gli')
model.mmp.add_block(
    main_key='MEDIUM_PROPERTIES',
    GEOMETRY_DIMENSION=2,
    GEOMETRY_AREA=1.0,
    POROSITY=[1, 0.0],
)
model.mmp.add_block(
    main_key='MEDIUM_PROPERTIES',
    GEOMETRY_DIMENSION=2,
    GEOMETRY_AREA=1.0,
    POROSITY=[1, 0.0],
)
model.msh.read_file('m_sdc.msh')
model.msp.add_block(
    main_key='SOLID_PROPERTIES',
    DENSITY=[1, 0.0],
    ELASTICITY=[
        ['POISSION', 0.4],
        ['YOUNGS_MODULUS'],
        [1, 20000000.0],
    ],
    PLASTICITY=[
        ['DRUCKER-PRAGER'],
        [29692.5],
        [81650.0],
        [-0.233345],
        [-0.141421],
        [-500000.0],
    ],
)
model.msp.add_block(
    main_key='SOLID_PROPERTIES',
    DENSITY=[1, 0.0],
    ELASTICITY=[
        ['POISSION', 0.4],
        ['YOUNGS_MODULUS'],
        [1, 20000000.0],
    ],
    PLASTICITY=[
        ['DRUCKER-PRAGER'],
        [28801.7],
        [81650.0],
        [-0.233345],
        [-0.141421],
        [-500000.0],
    ],
)
model.num.add_block(
    main_key='NUMERICS',
    PCS_TYPE='DEFORMATION',
    NON_LINEAR_SOLVER=['NEWTON', 0.0001, 1e-10, 100, 0.0],
    LINEAR_SOLVER=[2, 0, 1e-10, 5000, 1.0, 1, 4],
    ELE_GAUSS_POINTS=3,
)
model.out.add_block(
    main_key='OUTPUT',
    NOD_VALUES=[
        ['DISPLACEMENT_X1'],
        ['DISPLACEMENT_Y1'],
        ['STRESS_XX'],
        ['STRESS_XY'],
        ['STRESS_YY'],
        ['STRESS_ZZ'],
        ['STRAIN_XX'],
        ['STRAIN_XY'],
        ['STRAIN_YY'],
        ['STRAIN_PLS'],
    ],
    GEO_TYPE='DOMAIN:',
    DAT_TYPE='TECPLOT',
    TIM_TYPE=['STEPS:', 1],
    AMPLIFIER=10.0,
)
model.out.add_block(
    main_key='OUTPUT',
    NOD_VALUES=[
        ['DISPLACEMENT_X1'],
        ['DISPLACEMENT_Y1'],
        ['STRESS_XX'],
        ['STRESS_XY'],
        ['STRESS_YY'],
        ['STRESS_ZZ'],
        ['STRAIN_XX'],
        ['STRAIN_XY'],
        ['STRAIN_YY'],
        ['STRAIN_PLS'],
    ],
    GEO_TYPE=['POINT', 'POINT3'],
    DAT_TYPE='TECPLOT',
    TIM_TYPE=['STEPS:', 1],
)
model.out.add_block(
    main_key='OUTPUT',
    NOD_VALUES=[
        ['DISPLACEMENT_X1'],
        ['DISPLACEMENT_Y1'],
        ['STRESS_XX'],
        ['STRESS_XY'],
        ['STRESS_YY'],
        ['STRESS_ZZ'],
        ['STRAIN_XX'],
        ['STRAIN_XY'],
        ['STRAIN_YY'],
        ['STRAIN_PLS'],
    ],
    GEO_TYPE=['POINT', 'POINT6'],
    DAT_TYPE='TECPLOT',
    TIM_TYPE=['STEPS:', 1],
)
model.pcs.add_block(
    main_key='PROCESS',
    PCS_TYPE='DEFORMATION',
    NUM_TYPE='STRONG_DISCONTINUITY',
    ELEMENT_MATRIX_OUTPUT=0,
)
model.rfd.add_block(
    PROJECT=['BENCHMARK:', 'PLASTIC', 'DEFORMATION:', 'THE', 'SINGLE', 'YIELD', 'SURFACE', 'MODEL'],
)
model.rfd.add_block(
    CURVE=[
        [0.0, 0.0],
        [20.0, -0.04],
    ],
)
model.tim.add_block(
    main_key='TIME_STEPPING',
    PCS_TYPE='DEFORMATION',
    TIME_STEPS=[20, 1.0],
    TIME_END=20.0,
    TIME_START=0.0,
    TIME_CONTROL=[],
)
model.write_input()
model.run_model()
